apiVersion: apps/v1 # App deployment
kind: Deployment
metadata:
  name: devolon-laravel-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: devolon-laravel
  template:
    metadata:
      labels:
        app: devolon-laravel
    spec:
      securityContext:
        fsGroup: INIT.USERID
      containers:
        - name: devolon-laravel
          image: devolon-laravel:php-8.0
          command: ["/bin/bash"]
          args: ["-c", "./k8s lara-init && start-container"]
          env:
            - name: WWWUSER
              value: "INIT.USERID"
            - name: LARAVEL_SAIL
              value: "1"
          volumeMounts:
            - mountPath: /var/www/html
              name: devolon-laravel-vol
      volumes:
        - name: devolon-laravel-vol
          hostPath:
            path: INIT.ROOTPATH
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: devolon-laravel-srv
spec:
  selector:
    app: devolon-laravel
  type: ClusterIP
  ports:
    - name: devolon-laravel
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1 # MySql deployment
kind: Deployment
metadata:
  name: devolon-mysql-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: devolon-mysql
  template:
    metadata:
      labels:
        app: devolon-mysql
    spec:
      securityContext:
        runAsUser: INIT.USERID
        runAsGroup: INIT.USERID
        fsGroup: INIT.USERID
      containers:
        - name: devolon-mysql
          image: mysql:8
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: devolon-secrets
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              value: devolon_db
            - name: MYSQL_USER
              value: devolon_dbu
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: devolon-secrets
                  key: MYSQL_ROOT_PASSWORD
          # command: ["/bin/sh"]
          # args: [mysql]
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: devolon-mysql-vol
            - mountPath: /docker-entrypoint-initdb.d/create-test-db.sql
              name: devolon-test-db-conf
      volumes:
        - name: devolon-mysql-vol
          hostPath:
            path: INIT.ROOTPATH/mysql
            type: DirectoryOrCreate
        - name: devolon-test-db-conf
          hostPath:
            path: INIT.ROOTPATH/create-test-db.sql
            type: FileOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: devolon-mysql-srv
spec:
  selector:
    app: devolon-mysql
  type: ClusterIP
  ports:
    - name: devolon-mysql
      protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: v1 # MySql Node port to use with DB Management GUI (workbench)
kind: Service
metadata:
  name: devolon-mysql-node-srv
spec:
  type: NodePort
  selector:
    app: devolon-mysql
  ports:
    - name: devolon-mysql
      protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: devolon-ingress-srv
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  defaultBackend:
    service:
      name: devolon-laravel-srv
      port:
        number: 80
  rules:
    - host: INIT.DOMAIN # Modify hosts file with this domain to point to localhost or minikube ip
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: devolon-laravel-srv
                port:
                  number: 80
---
apiVersion: v1 # Sensitive data
kind: Secret
metadata:
  name: devolon-secrets
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: password # Repeat like this line

